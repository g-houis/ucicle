# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CD

on:
  push:
    branches: [ "master" ]

jobs:
  deploy_front:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front/
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        cache-dependency-path: './front/yarn.lock'
    - name: Run front cd script
      run: |
        yarn cd
      env: 
        ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DOMAIN: ${{ vars.DOMAIN }}
        REGION: ${{ vars.REGION }}
        BUCKET_NAME: ${{ vars.BUCKET_NAME }}

  deploy_functions:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./functions/
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        cache-dependency-path: './functions/yarn.lock'
    - name: Run functions cd script
      run: |
        yarn cd
      env:
        ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DOMAIN: ${{ vars.DOMAIN }}
        REGION: ${{ vars.REGION }}
        BUCKET_NAME: ${{ vars.BUCKET_NAME }}
